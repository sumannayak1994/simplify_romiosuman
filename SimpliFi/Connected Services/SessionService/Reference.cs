//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpliFi.SessionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:xtk:session", ConfigurationName="SessionService.sessionMethodsSoap")]
    public interface sessionMethodsSoap {
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#NewInstance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.NewInstanceResponse NewInstance(SimpliFi.SessionService.NewInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#NewInstance", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.NewInstanceResponse> NewInstanceAsync(SimpliFi.SessionService.NewInstanceRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Duplicate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.DuplicateResponse Duplicate(SimpliFi.SessionService.DuplicateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Duplicate", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateResponse> DuplicateAsync(SimpliFi.SessionService.DuplicateRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#DuplicateWithMappingId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.DuplicateWithMappingIdResponse DuplicateWithMappingId(SimpliFi.SessionService.DuplicateWithMappingIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#DuplicateWithMappingId", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateWithMappingIdResponse> DuplicateWithMappingIdAsync(SimpliFi.SessionService.DuplicateWithMappingIdRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#DuplicateTo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.DuplicateToResponse DuplicateTo(SimpliFi.SessionService.DuplicateToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#DuplicateTo", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateToResponse> DuplicateToAsync(SimpliFi.SessionService.DuplicateToRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#ApplyDuplicateRules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.ApplyDuplicateRulesResponse ApplyDuplicateRules(SimpliFi.SessionService.ApplyDuplicateRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#ApplyDuplicateRules", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.ApplyDuplicateRulesResponse> ApplyDuplicateRulesAsync(SimpliFi.SessionService.ApplyDuplicateRulesRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#SetDefaults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.SetDefaultsResponse SetDefaults(SimpliFi.SessionService.SetDefaultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#SetDefaults", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.SetDefaultsResponse> SetDefaultsAsync(SimpliFi.SessionService.SetDefaultsRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#SetDefaultValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.SetDefaultValuesResponse SetDefaultValues(SimpliFi.SessionService.SetDefaultValuesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#SetDefaultValues", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.SetDefaultValuesResponse> SetDefaultValuesAsync(SimpliFi.SessionService.SetDefaultValuesRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Load", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.LoadResponse Load(SimpliFi.SessionService.LoadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Load", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.LoadResponse> LoadAsync(SimpliFi.SessionService.LoadRequest request);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#LoadIfExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.LoadIfExistsResponse LoadIfExists(SimpliFi.SessionService.LoadIfExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#LoadIfExists", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.LoadIfExistsResponse> LoadIfExistsAsync(SimpliFi.SessionService.LoadIfExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#LoadAsText", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrContent")]
        string LoadAsText(string sessiontoken, string pkPk);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#LoadAsText", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrContent")]
        System.Threading.Tasks.Task<string> LoadAsTextAsync(string sessiontoken, string pkPk);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (urn:xtk:session)
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Remove", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Any")]
        SimpliFi.SessionService.RemoveResponse Remove(SimpliFi.SessionService.RemoveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Remove", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.RemoveResponse> RemoveAsync(SimpliFi.SessionService.RemoveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetPkList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ppklPkList")]
        string GetPkList(string sessiontoken, string entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetPkList", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ppklPkList")]
        System.Threading.Tasks.Task<string> GetPkListAsync(string sessiontoken, string entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Write", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Write(string sessiontoken, System.Xml.XmlElement domDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#Write", ReplyAction="*")]
        System.Threading.Tasks.Task WriteAsync(string sessiontoken, System.Xml.XmlElement domDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#WriteCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WriteCollection(string sessiontoken, System.Xml.XmlElement domDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#WriteCollection", ReplyAction="*")]
        System.Threading.Tasks.Task WriteCollectionAsync(string sessiontoken, System.Xml.XmlElement domDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#DeleteCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteCollection(string sessiontoken, string strSchema, System.Xml.XmlElement elemWhere, bool bIgnoreDeleteStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#DeleteCollection", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteCollectionAsync(string sessiontoken, string strSchema, System.Xml.XmlElement elemWhere, bool bIgnoreDeleteStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#ImportCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ImportCollection(string sessiontoken, System.Xml.XmlElement domDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#ImportCollection", ReplyAction="*")]
        System.Threading.Tasks.Task ImportCollectionAsync(string sessiontoken, System.Xml.XmlElement domDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetImages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Xml.XmlElement GetImages(string sessiontoken, string strPkList);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetImages", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetImagesAsync(string sessiontoken, string strPkList);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetEntityIfMoreRecent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Xml.XmlElement GetEntityIfMoreRecent(string sessiontoken, string strPk, string strMd5, bool bMustExist);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetEntityIfMoreRecent", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetEntityIfMoreRecentAsync(string sessiontoken, string strPk, string strMd5, bool bMustExist);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetDirtyCacheEntities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDirtyEntities")]
        System.Xml.XmlElement GetDirtyCacheEntities(string sessiontoken, System.Xml.XmlElement domCacheEntities);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetDirtyCacheEntities", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDirtyEntities")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetDirtyCacheEntitiesAsync(string sessiontoken, System.Xml.XmlElement domCacheEntities);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetActiveApplicationMenus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Xml.XmlElement GetActiveApplicationMenus(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetActiveApplicationMenus", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetActiveApplicationMenusAsync(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetDefaultEntity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Xml.XmlElement GetDefaultEntity(string sessiontoken, string strSchema);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:persist#GetDefaultEntity", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomDoc")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetDefaultEntityAsync(string sessiontoken, string strSchema);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Logon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SimpliFi.SessionService.LogonResponse Logon(SimpliFi.SessionService.LogonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Logon", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.LogonResponse> LogonAsync(SimpliFi.SessionService.LogonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#BearerTokenLogon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SimpliFi.SessionService.BearerTokenLogonResponse BearerTokenLogon(SimpliFi.SessionService.BearerTokenLogonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#BearerTokenLogon", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.BearerTokenLogonResponse> BearerTokenLogonAsync(SimpliFi.SessionService.BearerTokenLogonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pUserInfo")]
        System.Xml.XmlElement GetUserInfo(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetUserInfo", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pUserInfo")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserInfoAsync(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Logoff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Logoff(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Logoff", ReplyAction="*")]
        System.Threading.Tasks.Task LogoffAsync(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#KillSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void KillSession(string sessiontoken, string strId);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#KillSession", ReplyAction="*")]
        System.Threading.Tasks.Task KillSessionAsync(string sessiontoken, string strId);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#TestCnx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void TestCnx(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#TestCnx", ReplyAction="*")]
        System.Threading.Tasks.Task TestCnxAsync(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ChangePassword(string sessiontoken, string strOldPassword, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#ChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task ChangePasswordAsync(string sessiontoken, string strOldPassword, string strNewPassword);
        
        // CODEGEN: Parameter 'ptmServerTime' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetServerTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ptmServerTime")]
        SimpliFi.SessionService.GetServerTimeResponse GetServerTime(SimpliFi.SessionService.GetServerTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetServerTime", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.GetServerTimeResponse> GetServerTimeAsync(SimpliFi.SessionService.GetServerTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#ServerShutdown", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ServerShutdown(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#ServerShutdown", ReplyAction="*")]
        System.Threading.Tasks.Task ServerShutdownAsync(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SimpliFi.SessionService.GetOptionResponse GetOption(SimpliFi.SessionService.GetOptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetOption", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.GetOptionResponse> GetOptionAsync(SimpliFi.SessionService.GetOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetNewIds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrIdList")]
        string GetNewIds(string sessiontoken, int lCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetNewIds", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrIdList")]
        System.Threading.Tasks.Task<string> GetNewIdsAsync(string sessiontoken, int lCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetNewIdsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrIdList")]
        string GetNewIdsEx(string sessiontoken, int lCount, string strSequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetNewIdsEx", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrIdList")]
        System.Threading.Tasks.Task<string> GetNewIdsExAsync(string sessiontoken, int lCount, string strSequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetCnxInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomCnxInfo")]
        System.Xml.XmlElement GetCnxInfo(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#GetCnxInfo", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdomCnxInfo")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetCnxInfoAsync(string sessiontoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#FormatDataPolicy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrResult")]
        string FormatDataPolicy(string sessiontoken, string strDataPolicy, string strValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#FormatDataPolicy", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrResult")]
        System.Threading.Tasks.Task<string> FormatDataPolicyAsync(string sessiontoken, string strDataPolicy, string strValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Encrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        string Encrypt(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Encrypt", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        System.Threading.Tasks.Task<string> EncryptAsync(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#ReEncryptPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrNewPassword")]
        string ReEncryptPassword(string sessiontoken, string strOldPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#ReEncryptPassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrNewPassword")]
        System.Threading.Tasks.Task<string> ReEncryptPasswordAsync(string sessiontoken, string strOldPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#EncryptPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        string EncryptPassword(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#EncryptPassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        System.Threading.Tasks.Task<string> EncryptPasswordAsync(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#EncryptServerPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        string EncryptServerPassword(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#EncryptServerPassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        System.Threading.Tasks.Task<string> EncryptServerPasswordAsync(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#HashPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        string HashPassword(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#HashPassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pstrEncrypted")]
        System.Threading.Tasks.Task<string> HashPasswordAsync(string sessiontoken, string strDecrypted);
        
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Diff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SimpliFi.SessionService.DiffResponse Diff(SimpliFi.SessionService.DiffRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="xtk:session#Diff", ReplyAction="*")]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DiffResponse> DiffAsync(SimpliFi.SessionService.DiffRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NewInstance", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class NewInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        public NewInstanceRequest() {
        }
        
        public NewInstanceRequest(string sessiontoken, System.Xml.XmlElement entity) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NewInstanceResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class NewInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public NewInstanceResponse() {
        }
        
        public NewInstanceResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Duplicate", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DuplicateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pkPk;
        
        public DuplicateRequest() {
        }
        
        public DuplicateRequest(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
            this.pkPk = pkPk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicateResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DuplicateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public DuplicateResponse() {
        }
        
        public DuplicateResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicateWithMappingId", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DuplicateWithMappingIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pkPk;
        
        public DuplicateWithMappingIdRequest() {
        }
        
        public DuplicateWithMappingIdRequest(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
            this.pkPk = pkPk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicateWithMappingIdResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DuplicateWithMappingIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public DuplicateWithMappingIdResponse() {
        }
        
        public DuplicateWithMappingIdResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicateTo", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DuplicateToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pkPk;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=3)]
        public string pkFolder;
        
        public DuplicateToRequest() {
        }
        
        public DuplicateToRequest(string sessiontoken, System.Xml.XmlElement entity, string pkPk, string pkFolder) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
            this.pkPk = pkPk;
            this.pkFolder = pkFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicateToResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DuplicateToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public DuplicateToResponse() {
        }
        
        public DuplicateToResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApplyDuplicateRules", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class ApplyDuplicateRulesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        public ApplyDuplicateRulesRequest() {
        }
        
        public ApplyDuplicateRulesRequest(string sessiontoken, System.Xml.XmlElement entity) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApplyDuplicateRulesResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class ApplyDuplicateRulesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public ApplyDuplicateRulesResponse() {
        }
        
        public ApplyDuplicateRulesResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaults", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class SetDefaultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        public SetDefaultsRequest() {
        }
        
        public SetDefaultsRequest(string sessiontoken, System.Xml.XmlElement entity) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaultsResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class SetDefaultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public SetDefaultsResponse() {
        }
        
        public SetDefaultsResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaultValues", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class SetDefaultValuesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string strXpath;
        
        public SetDefaultValuesRequest() {
        }
        
        public SetDefaultValuesRequest(string sessiontoken, System.Xml.XmlElement entity, string strXpath) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
            this.strXpath = strXpath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaultValuesResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class SetDefaultValuesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public SetDefaultValuesResponse() {
        }
        
        public SetDefaultValuesResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Load", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class LoadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pkPk;
        
        public LoadRequest() {
        }
        
        public LoadRequest(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
            this.pkPk = pkPk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class LoadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public LoadResponse() {
        }
        
        public LoadResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadIfExists", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class LoadIfExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement entity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pkPk;
        
        public LoadIfExistsRequest() {
        }
        
        public LoadIfExistsRequest(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
            this.pkPk = pkPk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadIfExistsResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class LoadIfExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public LoadIfExistsResponse() {
        }
        
        public LoadIfExistsResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Remove", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class RemoveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public string entity;
        
        public RemoveRequest() {
        }
        
        public RemoveRequest(string sessiontoken, string entity) {
            this.sessiontoken = sessiontoken;
            this.entity = entity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class RemoveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any;
        
        public RemoveResponse() {
        }
        
        public RemoveResponse(System.Xml.XmlElement Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Logon", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class LogonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public string strLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string strPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=3)]
        public System.Xml.XmlElement elemParameters;
        
        public LogonRequest() {
        }
        
        public LogonRequest(string sessiontoken, string strLogin, string strPassword, System.Xml.XmlElement elemParameters) {
            this.sessiontoken = sessiontoken;
            this.strLogin = strLogin;
            this.strPassword = strPassword;
            this.elemParameters = elemParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class LogonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string pstrSessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement pSessionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pstrSecurityToken;
        
        public LogonResponse() {
        }
        
        public LogonResponse(string pstrSessionToken, System.Xml.XmlElement pSessionInfo, string pstrSecurityToken) {
            this.pstrSessionToken = pstrSessionToken;
            this.pSessionInfo = pSessionInfo;
            this.pstrSecurityToken = pstrSecurityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BearerTokenLogon", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class BearerTokenLogonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public string strBearerToken;
        
        public BearerTokenLogonRequest() {
        }
        
        public BearerTokenLogonRequest(string sessiontoken, string strBearerToken) {
            this.sessiontoken = sessiontoken;
            this.strBearerToken = strBearerToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BearerTokenLogonResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class BearerTokenLogonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string pstrSessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public System.Xml.XmlElement pSessionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=2)]
        public string pstrSecurityToken;
        
        public BearerTokenLogonResponse() {
        }
        
        public BearerTokenLogonResponse(string pstrSessionToken, System.Xml.XmlElement pSessionInfo, string pstrSecurityToken) {
            this.pstrSessionToken = pstrSessionToken;
            this.pSessionInfo = pSessionInfo;
            this.pstrSecurityToken = pstrSecurityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerTime", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class GetServerTimeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        public GetServerTimeRequest() {
        }
        
        public GetServerTimeRequest(string sessiontoken) {
            this.sessiontoken = sessiontoken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerTimeResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class GetServerTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ptmServerTime;
        
        public GetServerTimeResponse() {
        }
        
        public GetServerTimeResponse(System.Nullable<System.DateTime> ptmServerTime) {
            this.ptmServerTime = ptmServerTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOption", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class GetOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public string strName;
        
        public GetOptionRequest() {
        }
        
        public GetOptionRequest(string sessiontoken, string strName) {
            this.sessiontoken = sessiontoken;
            this.strName = strName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOptionResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class GetOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string pstrValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public sbyte pbtType;
        
        public GetOptionResponse() {
        }
        
        public GetOptionResponse(string pstrValue, sbyte pbtType) {
            this.pstrValue = pstrValue;
            this.pbtType = pbtType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Diff", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DiffRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string sessiontoken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public string pkPk;
        
        public DiffRequest() {
        }
        
        public DiffRequest(string sessiontoken, string pkPk) {
            this.sessiontoken = sessiontoken;
            this.pkPk = pkPk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DiffResponse", WrapperNamespace="urn:xtk:session", IsWrapped=true)]
    public partial class DiffResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=0)]
        public string pstrOriginal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:xtk:session", Order=1)]
        public string pstrCurrent;
        
        public DiffResponse() {
        }
        
        public DiffResponse(string pstrOriginal, string pstrCurrent) {
            this.pstrOriginal = pstrOriginal;
            this.pstrCurrent = pstrCurrent;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface sessionMethodsSoapChannel : SimpliFi.SessionService.sessionMethodsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sessionMethodsSoapClient : System.ServiceModel.ClientBase<SimpliFi.SessionService.sessionMethodsSoap>, SimpliFi.SessionService.sessionMethodsSoap {
        
        public sessionMethodsSoapClient() {
        }
        
        public sessionMethodsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public sessionMethodsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public sessionMethodsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public sessionMethodsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.NewInstanceResponse SimpliFi.SessionService.sessionMethodsSoap.NewInstance(SimpliFi.SessionService.NewInstanceRequest request) {
            return base.Channel.NewInstance(request);
        }
        
        public System.Xml.XmlElement NewInstance(string sessiontoken, System.Xml.XmlElement entity) {
            SimpliFi.SessionService.NewInstanceRequest inValue = new SimpliFi.SessionService.NewInstanceRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            SimpliFi.SessionService.NewInstanceResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).NewInstance(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.NewInstanceResponse> SimpliFi.SessionService.sessionMethodsSoap.NewInstanceAsync(SimpliFi.SessionService.NewInstanceRequest request) {
            return base.Channel.NewInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.NewInstanceResponse> NewInstanceAsync(string sessiontoken, System.Xml.XmlElement entity) {
            SimpliFi.SessionService.NewInstanceRequest inValue = new SimpliFi.SessionService.NewInstanceRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).NewInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.DuplicateResponse SimpliFi.SessionService.sessionMethodsSoap.Duplicate(SimpliFi.SessionService.DuplicateRequest request) {
            return base.Channel.Duplicate(request);
        }
        
        public System.Xml.XmlElement Duplicate(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.DuplicateRequest inValue = new SimpliFi.SessionService.DuplicateRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            SimpliFi.SessionService.DuplicateResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).Duplicate(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateResponse> SimpliFi.SessionService.sessionMethodsSoap.DuplicateAsync(SimpliFi.SessionService.DuplicateRequest request) {
            return base.Channel.DuplicateAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateResponse> DuplicateAsync(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.DuplicateRequest inValue = new SimpliFi.SessionService.DuplicateRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).DuplicateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.DuplicateWithMappingIdResponse SimpliFi.SessionService.sessionMethodsSoap.DuplicateWithMappingId(SimpliFi.SessionService.DuplicateWithMappingIdRequest request) {
            return base.Channel.DuplicateWithMappingId(request);
        }
        
        public System.Xml.XmlElement DuplicateWithMappingId(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.DuplicateWithMappingIdRequest inValue = new SimpliFi.SessionService.DuplicateWithMappingIdRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            SimpliFi.SessionService.DuplicateWithMappingIdResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).DuplicateWithMappingId(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateWithMappingIdResponse> SimpliFi.SessionService.sessionMethodsSoap.DuplicateWithMappingIdAsync(SimpliFi.SessionService.DuplicateWithMappingIdRequest request) {
            return base.Channel.DuplicateWithMappingIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateWithMappingIdResponse> DuplicateWithMappingIdAsync(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.DuplicateWithMappingIdRequest inValue = new SimpliFi.SessionService.DuplicateWithMappingIdRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).DuplicateWithMappingIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.DuplicateToResponse SimpliFi.SessionService.sessionMethodsSoap.DuplicateTo(SimpliFi.SessionService.DuplicateToRequest request) {
            return base.Channel.DuplicateTo(request);
        }
        
        public System.Xml.XmlElement DuplicateTo(string sessiontoken, System.Xml.XmlElement entity, string pkPk, string pkFolder) {
            SimpliFi.SessionService.DuplicateToRequest inValue = new SimpliFi.SessionService.DuplicateToRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            inValue.pkFolder = pkFolder;
            SimpliFi.SessionService.DuplicateToResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).DuplicateTo(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateToResponse> SimpliFi.SessionService.sessionMethodsSoap.DuplicateToAsync(SimpliFi.SessionService.DuplicateToRequest request) {
            return base.Channel.DuplicateToAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.DuplicateToResponse> DuplicateToAsync(string sessiontoken, System.Xml.XmlElement entity, string pkPk, string pkFolder) {
            SimpliFi.SessionService.DuplicateToRequest inValue = new SimpliFi.SessionService.DuplicateToRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            inValue.pkFolder = pkFolder;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).DuplicateToAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.ApplyDuplicateRulesResponse SimpliFi.SessionService.sessionMethodsSoap.ApplyDuplicateRules(SimpliFi.SessionService.ApplyDuplicateRulesRequest request) {
            return base.Channel.ApplyDuplicateRules(request);
        }
        
        public System.Xml.XmlElement ApplyDuplicateRules(string sessiontoken, System.Xml.XmlElement entity) {
            SimpliFi.SessionService.ApplyDuplicateRulesRequest inValue = new SimpliFi.SessionService.ApplyDuplicateRulesRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            SimpliFi.SessionService.ApplyDuplicateRulesResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).ApplyDuplicateRules(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.ApplyDuplicateRulesResponse> SimpliFi.SessionService.sessionMethodsSoap.ApplyDuplicateRulesAsync(SimpliFi.SessionService.ApplyDuplicateRulesRequest request) {
            return base.Channel.ApplyDuplicateRulesAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.ApplyDuplicateRulesResponse> ApplyDuplicateRulesAsync(string sessiontoken, System.Xml.XmlElement entity) {
            SimpliFi.SessionService.ApplyDuplicateRulesRequest inValue = new SimpliFi.SessionService.ApplyDuplicateRulesRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).ApplyDuplicateRulesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.SetDefaultsResponse SimpliFi.SessionService.sessionMethodsSoap.SetDefaults(SimpliFi.SessionService.SetDefaultsRequest request) {
            return base.Channel.SetDefaults(request);
        }
        
        public System.Xml.XmlElement SetDefaults(string sessiontoken, System.Xml.XmlElement entity) {
            SimpliFi.SessionService.SetDefaultsRequest inValue = new SimpliFi.SessionService.SetDefaultsRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            SimpliFi.SessionService.SetDefaultsResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).SetDefaults(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.SetDefaultsResponse> SimpliFi.SessionService.sessionMethodsSoap.SetDefaultsAsync(SimpliFi.SessionService.SetDefaultsRequest request) {
            return base.Channel.SetDefaultsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.SetDefaultsResponse> SetDefaultsAsync(string sessiontoken, System.Xml.XmlElement entity) {
            SimpliFi.SessionService.SetDefaultsRequest inValue = new SimpliFi.SessionService.SetDefaultsRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).SetDefaultsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.SetDefaultValuesResponse SimpliFi.SessionService.sessionMethodsSoap.SetDefaultValues(SimpliFi.SessionService.SetDefaultValuesRequest request) {
            return base.Channel.SetDefaultValues(request);
        }
        
        public System.Xml.XmlElement SetDefaultValues(string sessiontoken, System.Xml.XmlElement entity, string strXpath) {
            SimpliFi.SessionService.SetDefaultValuesRequest inValue = new SimpliFi.SessionService.SetDefaultValuesRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.strXpath = strXpath;
            SimpliFi.SessionService.SetDefaultValuesResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).SetDefaultValues(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.SetDefaultValuesResponse> SimpliFi.SessionService.sessionMethodsSoap.SetDefaultValuesAsync(SimpliFi.SessionService.SetDefaultValuesRequest request) {
            return base.Channel.SetDefaultValuesAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.SetDefaultValuesResponse> SetDefaultValuesAsync(string sessiontoken, System.Xml.XmlElement entity, string strXpath) {
            SimpliFi.SessionService.SetDefaultValuesRequest inValue = new SimpliFi.SessionService.SetDefaultValuesRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.strXpath = strXpath;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).SetDefaultValuesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.LoadResponse SimpliFi.SessionService.sessionMethodsSoap.Load(SimpliFi.SessionService.LoadRequest request) {
            return base.Channel.Load(request);
        }
        
        public System.Xml.XmlElement Load(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.LoadRequest inValue = new SimpliFi.SessionService.LoadRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            SimpliFi.SessionService.LoadResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).Load(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.LoadResponse> SimpliFi.SessionService.sessionMethodsSoap.LoadAsync(SimpliFi.SessionService.LoadRequest request) {
            return base.Channel.LoadAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.LoadResponse> LoadAsync(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.LoadRequest inValue = new SimpliFi.SessionService.LoadRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).LoadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.LoadIfExistsResponse SimpliFi.SessionService.sessionMethodsSoap.LoadIfExists(SimpliFi.SessionService.LoadIfExistsRequest request) {
            return base.Channel.LoadIfExists(request);
        }
        
        public System.Xml.XmlElement LoadIfExists(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.LoadIfExistsRequest inValue = new SimpliFi.SessionService.LoadIfExistsRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            SimpliFi.SessionService.LoadIfExistsResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).LoadIfExists(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.LoadIfExistsResponse> SimpliFi.SessionService.sessionMethodsSoap.LoadIfExistsAsync(SimpliFi.SessionService.LoadIfExistsRequest request) {
            return base.Channel.LoadIfExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.LoadIfExistsResponse> LoadIfExistsAsync(string sessiontoken, System.Xml.XmlElement entity, string pkPk) {
            SimpliFi.SessionService.LoadIfExistsRequest inValue = new SimpliFi.SessionService.LoadIfExistsRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            inValue.pkPk = pkPk;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).LoadIfExistsAsync(inValue);
        }
        
        public string LoadAsText(string sessiontoken, string pkPk) {
            return base.Channel.LoadAsText(sessiontoken, pkPk);
        }
        
        public System.Threading.Tasks.Task<string> LoadAsTextAsync(string sessiontoken, string pkPk) {
            return base.Channel.LoadAsTextAsync(sessiontoken, pkPk);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.RemoveResponse SimpliFi.SessionService.sessionMethodsSoap.Remove(SimpliFi.SessionService.RemoveRequest request) {
            return base.Channel.Remove(request);
        }
        
        public System.Xml.XmlElement Remove(string sessiontoken, string entity) {
            SimpliFi.SessionService.RemoveRequest inValue = new SimpliFi.SessionService.RemoveRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            SimpliFi.SessionService.RemoveResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).Remove(inValue);
            return retVal.Any;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.RemoveResponse> SimpliFi.SessionService.sessionMethodsSoap.RemoveAsync(SimpliFi.SessionService.RemoveRequest request) {
            return base.Channel.RemoveAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.RemoveResponse> RemoveAsync(string sessiontoken, string entity) {
            SimpliFi.SessionService.RemoveRequest inValue = new SimpliFi.SessionService.RemoveRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.entity = entity;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).RemoveAsync(inValue);
        }
        
        public string GetPkList(string sessiontoken, string entity) {
            return base.Channel.GetPkList(sessiontoken, entity);
        }
        
        public System.Threading.Tasks.Task<string> GetPkListAsync(string sessiontoken, string entity) {
            return base.Channel.GetPkListAsync(sessiontoken, entity);
        }
        
        public void Write(string sessiontoken, System.Xml.XmlElement domDoc) {
            base.Channel.Write(sessiontoken, domDoc);
        }
        
        public System.Threading.Tasks.Task WriteAsync(string sessiontoken, System.Xml.XmlElement domDoc) {
            return base.Channel.WriteAsync(sessiontoken, domDoc);
        }
        
        public void WriteCollection(string sessiontoken, System.Xml.XmlElement domDoc) {
            base.Channel.WriteCollection(sessiontoken, domDoc);
        }
        
        public System.Threading.Tasks.Task WriteCollectionAsync(string sessiontoken, System.Xml.XmlElement domDoc) {
            return base.Channel.WriteCollectionAsync(sessiontoken, domDoc);
        }
        
        public void DeleteCollection(string sessiontoken, string strSchema, System.Xml.XmlElement elemWhere, bool bIgnoreDeleteStatus) {
            base.Channel.DeleteCollection(sessiontoken, strSchema, elemWhere, bIgnoreDeleteStatus);
        }
        
        public System.Threading.Tasks.Task DeleteCollectionAsync(string sessiontoken, string strSchema, System.Xml.XmlElement elemWhere, bool bIgnoreDeleteStatus) {
            return base.Channel.DeleteCollectionAsync(sessiontoken, strSchema, elemWhere, bIgnoreDeleteStatus);
        }
        
        public void ImportCollection(string sessiontoken, System.Xml.XmlElement domDoc) {
            base.Channel.ImportCollection(sessiontoken, domDoc);
        }
        
        public System.Threading.Tasks.Task ImportCollectionAsync(string sessiontoken, System.Xml.XmlElement domDoc) {
            return base.Channel.ImportCollectionAsync(sessiontoken, domDoc);
        }
        
        public System.Xml.XmlElement GetImages(string sessiontoken, string strPkList) {
            return base.Channel.GetImages(sessiontoken, strPkList);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetImagesAsync(string sessiontoken, string strPkList) {
            return base.Channel.GetImagesAsync(sessiontoken, strPkList);
        }
        
        public System.Xml.XmlElement GetEntityIfMoreRecent(string sessiontoken, string strPk, string strMd5, bool bMustExist) {
            return base.Channel.GetEntityIfMoreRecent(sessiontoken, strPk, strMd5, bMustExist);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetEntityIfMoreRecentAsync(string sessiontoken, string strPk, string strMd5, bool bMustExist) {
            return base.Channel.GetEntityIfMoreRecentAsync(sessiontoken, strPk, strMd5, bMustExist);
        }
        
        public System.Xml.XmlElement GetDirtyCacheEntities(string sessiontoken, System.Xml.XmlElement domCacheEntities) {
            return base.Channel.GetDirtyCacheEntities(sessiontoken, domCacheEntities);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetDirtyCacheEntitiesAsync(string sessiontoken, System.Xml.XmlElement domCacheEntities) {
            return base.Channel.GetDirtyCacheEntitiesAsync(sessiontoken, domCacheEntities);
        }
        
        public System.Xml.XmlElement GetActiveApplicationMenus(string sessiontoken) {
            return base.Channel.GetActiveApplicationMenus(sessiontoken);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetActiveApplicationMenusAsync(string sessiontoken) {
            return base.Channel.GetActiveApplicationMenusAsync(sessiontoken);
        }
        
        public System.Xml.XmlElement GetDefaultEntity(string sessiontoken, string strSchema) {
            return base.Channel.GetDefaultEntity(sessiontoken, strSchema);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetDefaultEntityAsync(string sessiontoken, string strSchema) {
            return base.Channel.GetDefaultEntityAsync(sessiontoken, strSchema);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.LogonResponse SimpliFi.SessionService.sessionMethodsSoap.Logon(SimpliFi.SessionService.LogonRequest request) {
            return base.Channel.Logon(request);
        }
        
        public string Logon(string sessiontoken, string strLogin, string strPassword, System.Xml.XmlElement elemParameters, out System.Xml.XmlElement pSessionInfo, out string pstrSecurityToken) {
            SimpliFi.SessionService.LogonRequest inValue = new SimpliFi.SessionService.LogonRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.strLogin = strLogin;
            inValue.strPassword = strPassword;
            inValue.elemParameters = elemParameters;
            SimpliFi.SessionService.LogonResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).Logon(inValue);
            pSessionInfo = retVal.pSessionInfo;
            pstrSecurityToken = retVal.pstrSecurityToken;
            return retVal.pstrSessionToken;
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.LogonResponse> LogonAsync(SimpliFi.SessionService.LogonRequest request) {
            return base.Channel.LogonAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.BearerTokenLogonResponse SimpliFi.SessionService.sessionMethodsSoap.BearerTokenLogon(SimpliFi.SessionService.BearerTokenLogonRequest request) {
            return base.Channel.BearerTokenLogon(request);
        }
        
        public string BearerTokenLogon(string sessiontoken, string strBearerToken, out System.Xml.XmlElement pSessionInfo, out string pstrSecurityToken) {
            SimpliFi.SessionService.BearerTokenLogonRequest inValue = new SimpliFi.SessionService.BearerTokenLogonRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.strBearerToken = strBearerToken;
            SimpliFi.SessionService.BearerTokenLogonResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).BearerTokenLogon(inValue);
            pSessionInfo = retVal.pSessionInfo;
            pstrSecurityToken = retVal.pstrSecurityToken;
            return retVal.pstrSessionToken;
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.BearerTokenLogonResponse> BearerTokenLogonAsync(SimpliFi.SessionService.BearerTokenLogonRequest request) {
            return base.Channel.BearerTokenLogonAsync(request);
        }
        
        public System.Xml.XmlElement GetUserInfo(string sessiontoken) {
            return base.Channel.GetUserInfo(sessiontoken);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserInfoAsync(string sessiontoken) {
            return base.Channel.GetUserInfoAsync(sessiontoken);
        }
        
        public void Logoff(string sessiontoken) {
            base.Channel.Logoff(sessiontoken);
        }
        
        public System.Threading.Tasks.Task LogoffAsync(string sessiontoken) {
            return base.Channel.LogoffAsync(sessiontoken);
        }
        
        public void KillSession(string sessiontoken, string strId) {
            base.Channel.KillSession(sessiontoken, strId);
        }
        
        public System.Threading.Tasks.Task KillSessionAsync(string sessiontoken, string strId) {
            return base.Channel.KillSessionAsync(sessiontoken, strId);
        }
        
        public void TestCnx(string sessiontoken) {
            base.Channel.TestCnx(sessiontoken);
        }
        
        public System.Threading.Tasks.Task TestCnxAsync(string sessiontoken) {
            return base.Channel.TestCnxAsync(sessiontoken);
        }
        
        public void ChangePassword(string sessiontoken, string strOldPassword, string strNewPassword) {
            base.Channel.ChangePassword(sessiontoken, strOldPassword, strNewPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string sessiontoken, string strOldPassword, string strNewPassword) {
            return base.Channel.ChangePasswordAsync(sessiontoken, strOldPassword, strNewPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.GetServerTimeResponse SimpliFi.SessionService.sessionMethodsSoap.GetServerTime(SimpliFi.SessionService.GetServerTimeRequest request) {
            return base.Channel.GetServerTime(request);
        }
        
        public System.Nullable<System.DateTime> GetServerTime(string sessiontoken) {
            SimpliFi.SessionService.GetServerTimeRequest inValue = new SimpliFi.SessionService.GetServerTimeRequest();
            inValue.sessiontoken = sessiontoken;
            SimpliFi.SessionService.GetServerTimeResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).GetServerTime(inValue);
            return retVal.ptmServerTime;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SimpliFi.SessionService.GetServerTimeResponse> SimpliFi.SessionService.sessionMethodsSoap.GetServerTimeAsync(SimpliFi.SessionService.GetServerTimeRequest request) {
            return base.Channel.GetServerTimeAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.GetServerTimeResponse> GetServerTimeAsync(string sessiontoken) {
            SimpliFi.SessionService.GetServerTimeRequest inValue = new SimpliFi.SessionService.GetServerTimeRequest();
            inValue.sessiontoken = sessiontoken;
            return ((SimpliFi.SessionService.sessionMethodsSoap)(this)).GetServerTimeAsync(inValue);
        }
        
        public void ServerShutdown(string sessiontoken) {
            base.Channel.ServerShutdown(sessiontoken);
        }
        
        public System.Threading.Tasks.Task ServerShutdownAsync(string sessiontoken) {
            return base.Channel.ServerShutdownAsync(sessiontoken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.GetOptionResponse SimpliFi.SessionService.sessionMethodsSoap.GetOption(SimpliFi.SessionService.GetOptionRequest request) {
            return base.Channel.GetOption(request);
        }
        
        public string GetOption(string sessiontoken, string strName, out sbyte pbtType) {
            SimpliFi.SessionService.GetOptionRequest inValue = new SimpliFi.SessionService.GetOptionRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.strName = strName;
            SimpliFi.SessionService.GetOptionResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).GetOption(inValue);
            pbtType = retVal.pbtType;
            return retVal.pstrValue;
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.GetOptionResponse> GetOptionAsync(SimpliFi.SessionService.GetOptionRequest request) {
            return base.Channel.GetOptionAsync(request);
        }
        
        public string GetNewIds(string sessiontoken, int lCount) {
            return base.Channel.GetNewIds(sessiontoken, lCount);
        }
        
        public System.Threading.Tasks.Task<string> GetNewIdsAsync(string sessiontoken, int lCount) {
            return base.Channel.GetNewIdsAsync(sessiontoken, lCount);
        }
        
        public string GetNewIdsEx(string sessiontoken, int lCount, string strSequence) {
            return base.Channel.GetNewIdsEx(sessiontoken, lCount, strSequence);
        }
        
        public System.Threading.Tasks.Task<string> GetNewIdsExAsync(string sessiontoken, int lCount, string strSequence) {
            return base.Channel.GetNewIdsExAsync(sessiontoken, lCount, strSequence);
        }
        
        public System.Xml.XmlElement GetCnxInfo(string sessiontoken) {
            return base.Channel.GetCnxInfo(sessiontoken);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetCnxInfoAsync(string sessiontoken) {
            return base.Channel.GetCnxInfoAsync(sessiontoken);
        }
        
        public string FormatDataPolicy(string sessiontoken, string strDataPolicy, string strValue) {
            return base.Channel.FormatDataPolicy(sessiontoken, strDataPolicy, strValue);
        }
        
        public System.Threading.Tasks.Task<string> FormatDataPolicyAsync(string sessiontoken, string strDataPolicy, string strValue) {
            return base.Channel.FormatDataPolicyAsync(sessiontoken, strDataPolicy, strValue);
        }
        
        public string Encrypt(string sessiontoken, string strDecrypted) {
            return base.Channel.Encrypt(sessiontoken, strDecrypted);
        }
        
        public System.Threading.Tasks.Task<string> EncryptAsync(string sessiontoken, string strDecrypted) {
            return base.Channel.EncryptAsync(sessiontoken, strDecrypted);
        }
        
        public string ReEncryptPassword(string sessiontoken, string strOldPassword) {
            return base.Channel.ReEncryptPassword(sessiontoken, strOldPassword);
        }
        
        public System.Threading.Tasks.Task<string> ReEncryptPasswordAsync(string sessiontoken, string strOldPassword) {
            return base.Channel.ReEncryptPasswordAsync(sessiontoken, strOldPassword);
        }
        
        public string EncryptPassword(string sessiontoken, string strDecrypted) {
            return base.Channel.EncryptPassword(sessiontoken, strDecrypted);
        }
        
        public System.Threading.Tasks.Task<string> EncryptPasswordAsync(string sessiontoken, string strDecrypted) {
            return base.Channel.EncryptPasswordAsync(sessiontoken, strDecrypted);
        }
        
        public string EncryptServerPassword(string sessiontoken, string strDecrypted) {
            return base.Channel.EncryptServerPassword(sessiontoken, strDecrypted);
        }
        
        public System.Threading.Tasks.Task<string> EncryptServerPasswordAsync(string sessiontoken, string strDecrypted) {
            return base.Channel.EncryptServerPasswordAsync(sessiontoken, strDecrypted);
        }
        
        public string HashPassword(string sessiontoken, string strDecrypted) {
            return base.Channel.HashPassword(sessiontoken, strDecrypted);
        }
        
        public System.Threading.Tasks.Task<string> HashPasswordAsync(string sessiontoken, string strDecrypted) {
            return base.Channel.HashPasswordAsync(sessiontoken, strDecrypted);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SimpliFi.SessionService.DiffResponse SimpliFi.SessionService.sessionMethodsSoap.Diff(SimpliFi.SessionService.DiffRequest request) {
            return base.Channel.Diff(request);
        }
        
        public string Diff(string sessiontoken, string pkPk, out string pstrCurrent) {
            SimpliFi.SessionService.DiffRequest inValue = new SimpliFi.SessionService.DiffRequest();
            inValue.sessiontoken = sessiontoken;
            inValue.pkPk = pkPk;
            SimpliFi.SessionService.DiffResponse retVal = ((SimpliFi.SessionService.sessionMethodsSoap)(this)).Diff(inValue);
            pstrCurrent = retVal.pstrCurrent;
            return retVal.pstrOriginal;
        }
        
        public System.Threading.Tasks.Task<SimpliFi.SessionService.DiffResponse> DiffAsync(SimpliFi.SessionService.DiffRequest request) {
            return base.Channel.DiffAsync(request);
        }
    }
}
